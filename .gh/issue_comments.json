[
  {
    "url": "https://api.github.com/repos/BjornMelin/docmind-ai-llm/issues/comments/3261277082",
    "html_url": "https://github.com/BjornMelin/docmind-ai-llm/pull/30#issuecomment-3261277082",
    "issue_url": "https://api.github.com/repos/BjornMelin/docmind-ai-llm/issues/30",
    "id": 3261277082,
    "node_id": "IC_kwDONtruzM7CYyOa",
    "user": {
      "login": "sourcery-ai[bot]",
      "id": 58596630,
      "node_id": "MDM6Qm90NTg1OTY2MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/in/48477?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sourcery-ai%5Bbot%5D",
      "html_url": "https://github.com/apps/sourcery-ai",
      "followers_url": "https://api.github.com/users/sourcery-ai%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/sourcery-ai%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/sourcery-ai%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sourcery-ai%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sourcery-ai%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/sourcery-ai%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/sourcery-ai%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/sourcery-ai%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sourcery-ai%5Bbot%5D/received_events",
      "type": "Bot",
      "user_view_type": "public",
      "site_admin": false
    },
    "created_at": "2025-09-06T06:23:36Z",
    "updated_at": "2025-09-06T06:24:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!-- Generated by sourcery-ai[bot]: start review_guide -->\n\n## Reviewer's Guide\n\nImplements a standardized Unstructuredâ†’LlamaIndex ingestion pipeline with configurable partition strategies (including OCR fallback), deterministic node IDs, PDF page image emission, and a local DuckDB-backed cache for idempotent, repeatable processing.\n\n#### Sequence diagram for ingestion pipeline with Unstructured, OCR fallback, and DuckDB cache\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant \"DocumentProcessor\"\n    participant \"Unstructured(partition)\"\n    participant \"OCR Engine\"\n    participant \"LlamaIndex IngestionPipeline\"\n    participant \"DuckDBKVStore(IngestionCache)\"\n\n    User->>\"DocumentProcessor\": process_document_async(file_path)\n    \"DocumentProcessor\"->>\"DuckDBKVStore(IngestionCache)\": check cache for file_path\n    alt Cache hit\n        \"DuckDBKVStore(IngestionCache)\"-->>\"DocumentProcessor\": return cached result\n    else Cache miss\n        \"DocumentProcessor\"->>\"Unstructured(partition)\": partition(file_path, strategy)\n        alt Partition fails or scanned PDF\n            \"DocumentProcessor\"->>\"OCR Engine\": extract text via OCR\n            \"OCR Engine\"-->>\"DocumentProcessor\": OCR text\n        end\n        \"DocumentProcessor\"->>\"LlamaIndex IngestionPipeline\": ingest partitioned elements\n        \"LlamaIndex IngestionPipeline\"-->>\"DocumentProcessor\": nodes\n        \"DocumentProcessor\"->>\"DuckDBKVStore(IngestionCache)\": store result\n    end\n    \"DocumentProcessor\"-->>User: return processed elements\n```\n\n#### Sequence diagram for PDF page image emission during ingestion\n\n```mermaid\nsequenceDiagram\n    participant \"DocumentProcessor\"\n    participant \"save_pdf_page_images()\"\n    participant \"DuckDBKVStore(IngestionCache)\"\n\n    \"DocumentProcessor\"->>\"save_pdf_page_images()\": Render PDF pages to PNG\n    \"save_pdf_page_images()\"-->>\"DocumentProcessor\": Return image metadata (page_no, image_path, bbox)\n    \"DocumentProcessor\"->>\"DuckDBKVStore(IngestionCache)\": Store image node metadata\n    \"DocumentProcessor\"-->>\"DocumentProcessor\": Extend processed elements with image nodes\n```\n\n#### ER diagram for PDF page image node and document element\n\n```mermaid\nerDiagram\n    DOCUMENT_ELEMENT {\n        string doc_id\n        string text\n        string category\n        dict metadata\n    }\n    PDF_PAGE_IMAGE_NODE {\n        string node_id\n        int page_no\n        tuple bbox\n        string modality\n        string source_path\n        string hash\n    }\n    DOCUMENT_ELEMENT ||--o{ PDF_PAGE_IMAGE_NODE : contains\n```\n\n#### Class diagram for deterministic node IDs and PDF page image nodes\n\n```mermaid\nclassDiagram\n    class PdfPageImageNode {\n        +str node_id\n        +int page_no\n        +tuple bbox\n        +str modality\n        +str source_path\n        +str hash\n    }\n\n    class DocumentElement {\n        +str text\n        +str category\n        +dict metadata\n        +str doc_id\n        +list excluded_embed_metadata_keys\n    }\n\n    PdfPageImageNode <|-- DocumentElement : \"image node extends element\"\n```\n\n#### Flow diagram for ingestion pipeline with strategy mapping and caching\n\n```mermaid\nflowchart TD\n    A[\"Start: process_document_async(file_path)\"] --> B[\"Check DuckDBKVStore cache\"]\n    B -->|Cache hit| C[\"Return cached result\"]\n    B -->|Cache miss| D[\"Partition document with Unstructured (strategy mapping)\"]\n    D --> E[\"OCR fallback if needed\"]\n    E --> F[\"LlamaIndex IngestionPipeline: chunking & node creation\"]\n    F --> G[\"Emit PDF page images (if PDF)\"]\n    G --> H[\"Store results in DuckDBKVStore cache\"]\n    H --> I[\"Return processed elements\"]\n```\n\n### File-Level Changes\n\n| Change | Details | Files |\n| ------ | ------- | ----- |\n| Add Unstructured-based ingestion transform with strategy mapping and heuristic chunking | <ul><li>Introduce UnstructuredTransformation component orchestrating partition(auto) calls</li><li>Implement strategy mapping (hi_res, fast, ocr_only) with OCR fallback</li><li>Apply title-density heuristic to choose chunk_by_title vs basic chunk_elements</li><li>Wire transformation into LlamaIndex IngestionPipeline sequence</li></ul> | `src/processing/document_processor.py` |\n| Enable deterministic node IDs and parent lineage via SHA-256 hashing | <ul><li>Add _normalize_text and sha256_id utilities for stable hashing</li><li>Compute and assign node_id and parent_id in DocumentProcessor</li><li>Normalize text and metadata keys before hashing</li></ul> | `src/processing/utils.py`<br/>`src/processing/document_processor.py` |\n| Emit PDF page images with stable filenames and include bbox metadata | <ul><li>Implement save_pdf_page_images to render pages to __page-<n>.png idempotently</li><li>Append pdf_page_image DocumentElements with page_no, bbox, image_path</li><li>Define PdfPageImageNode schema in models for artifact metadata</li></ul> | `src/processing/pdf_pages.py`<br/>`src/processing/document_processor.py`<br/>`src/models/schemas.py` |\n| Integrate DuckDB-backed IngestionCache for idempotent runs and cache statistics | <ul><li>Initialize IngestionCache with DuckDBKVStore at ./cache/docmind.duckdb</li><li>Persist cache file creation and directory setup</li><li>Capture hit/miss stats and include in ProcessingResult metadata</li></ul> | `src/processing/document_processor.py` |\n| Expand test coverage and update scripts/docs for new ingestion and performance features | <ul><li>Add unit/integration tests for chunking heuristics, deterministic IDs, PDF images, and cache behavior</li><li>Enhance performance_monitor to collect CPU/GPU memory usage and integrate in docs/scripts</li><li>Standardize command invocations (uv run) across README, docs, and scripts</li></ul> | `tests/unit/processing/test_deterministic_ids_unit.py`<br/>`tests/unit/processing/test_pdf_pages_unit.py`<br/>`tests/integration/test_ingestion_pipeline_pdf_images.py`<br/>`scripts/performance_monitor.py`<br/>`README.md`<br/>`docs/` |\n\n---\n\n<details>\n<summary>Tips and commands</summary>\n\n#### Interacting with Sourcery\n\n- **Trigger a new review:** Comment `@sourcery-ai review` on the pull request.\n- **Continue discussions:** Reply directly to Sourcery's review comments.\n- **Generate a GitHub issue from a review comment:** Ask Sourcery to create an\n  issue from a review comment by replying to it. You can also reply to a\n  review comment with `@sourcery-ai issue` to create an issue from it.\n- **Generate a pull request title:** Write `@sourcery-ai` anywhere in the pull\n  request title to generate a title at any time. You can also comment\n  `@sourcery-ai title` on the pull request to (re-)generate the title at any time.\n- **Generate a pull request summary:** Write `@sourcery-ai summary` anywhere in\n  the pull request body to generate a PR summary at any time exactly where you\n  want it. You can also comment `@sourcery-ai summary` on the pull request to\n  (re-)generate the summary at any time.\n- **Generate reviewer's guide:** Comment `@sourcery-ai guide` on the pull\n  request to (re-)generate the reviewer's guide at any time.\n- **Resolve all Sourcery comments:** Comment `@sourcery-ai resolve` on the\n  pull request to resolve all Sourcery comments. Useful if you've already\n  addressed all the comments and don't want to see them anymore.\n- **Dismiss all Sourcery reviews:** Comment `@sourcery-ai dismiss` on the pull\n  request to dismiss all existing Sourcery reviews. Especially useful if you\n  want to start fresh with a new review - don't forget to comment\n  `@sourcery-ai review` to trigger a new review!\n\n#### Customizing Your Experience\n\nAccess your [dashboard](https://app.sourcery.ai) to:\n- Enable or disable review features such as the Sourcery-generated pull request\n  summary, the reviewer's guide, and others.\n- Change the review language.\n- Add, remove or edit custom review instructions.\n- Adjust other review settings.\n\n#### Getting Help\n\n- [Contact our support team](mailto:support@sourcery.ai) for questions or feedback.\n- Visit our [documentation](https://docs.sourcery.ai) for detailed guides and information.\n- Keep in touch with the Sourcery team by following us on [X/Twitter](https://x.com/SourceryAI), [LinkedIn](https://www.linkedin.com/company/sourcery-ai/) or [GitHub](https://github.com/sourcery-ai).\n\n</details>\n\n<!-- Generated by sourcery-ai[bot]: end review_guide -->",
    "reactions": {
      "url": "https://api.github.com/repos/BjornMelin/docmind-ai-llm/issues/comments/3261277082/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": {
      "id": 48477,
      "client_id": "Iv1.25d1242251bb3f02",
      "slug": "sourcery-ai",
      "node_id": "MDM6QXBwNDg0Nzc=",
      "owner": {
        "login": "sourcery-ai",
        "id": 36609879,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM2NjA5ODc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36609879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sourcery-ai",
        "html_url": "https://github.com/sourcery-ai",
        "followers_url": "https://api.github.com/users/sourcery-ai/followers",
        "following_url": "https://api.github.com/users/sourcery-ai/following{/other_user}",
        "gists_url": "https://api.github.com/users/sourcery-ai/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sourcery-ai/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sourcery-ai/subscriptions",
        "organizations_url": "https://api.github.com/users/sourcery-ai/orgs",
        "repos_url": "https://api.github.com/users/sourcery-ai/repos",
        "events_url": "https://api.github.com/users/sourcery-ai/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sourcery-ai/received_events",
        "type": "Organization",
        "user_view_type": "public",
        "site_admin": false
      },
      "name": "Sourcery AI",
      "description": "## Instant AI code reviews\r\n\r\n- Speed up your code review process\r\n- Improve your code quality and ensure high quality code\r\n- Spend less time on reviews\r\n- Accelerate development velocity",
      "external_url": "https://sourcery.ai",
      "html_url": "https://github.com/apps/sourcery-ai",
      "created_at": "2019-12-06T13:02:12Z",
      "updated_at": "2025-07-25T14:23:20Z",
      "permissions": {
        "actions": "write",
        "checks": "write",
        "contents": "write",
        "emails": "read",
        "issues": "write",
        "members": "read",
        "metadata": "read",
        "pull_requests": "write",
        "statuses": "write",
        "workflows": "write"
      },
      "events": [
        "check_suite",
        "issues",
        "issue_comment",
        "member",
        "organization",
        "pull_request",
        "pull_request_review",
        "pull_request_review_comment",
        "repository"
      ]
    }
  }
]
