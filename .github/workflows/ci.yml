name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv (with cache)
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Sync environment (app + test extras)
        run: |
          # Create project venv and install dependencies from lockfile, including tests
          uv sync --extra test --frozen

      - name: Quality Gate - Ruff (format+lint)
        run: |
          uvx ruff format --check .
          uvx ruff check .

      - name: Quality Gate - Pylint (fail-under=9.5)
        run: |
          uvx pylint --fail-under=9.5 -j 0 src tests

      - name: Run unit/integration tests (no coverage gate)
        env:
          HF_HUB_OFFLINE: '1'
          TRANSFORMERS_OFFLINE: '1'
        run: |
          uv run pytest -q -c .github/pytest.nocov.ini -m "unit or integration" -k "not requires_gpu and not gpu_required and not performance"

      - name: Run unit/integration with coverage (soft gate)
        continue-on-error: true
        env:
          HF_HUB_OFFLINE: '1'
          TRANSFORMERS_OFFLINE: '1'
        run: |
          uv run pytest -q -m "unit or integration" -k "not requires_gpu and not gpu_required and not performance"

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            htmlcov
            coverage.xml
            coverage.json
          if-no-files-found: ignore
