name: CI

on:
  pull_request:
    branches: [ main, development ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
  push:
    branches: [ main ]

permissions:
  contents: read

env:
  PYLINT_FAIL_UNDER: "9.4"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit:
    name: Lint and Unit Tests (Linux)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.10"]
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv (with cache)
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-py${{ matrix.python-version }}-uv-${{ hashFiles('uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-uv-
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: uv sync --group test --group dev

      - name: Lint + Unit
        uses: ./.github/actions/python-ci
        with:
          run_type: unit
          coverage: 'false'

  integration:
    name: Integration Tests (Linux)
    runs-on: ubuntu-latest
    needs: unit
    strategy:
      matrix:
        python-version: ["3.11", "3.10"]
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv (with cache)
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-py${{ matrix.python-version }}-uv-${{ hashFiles('uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-uv-
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: uv sync --group test --group dev

      - name: Lint + Integration
        uses: ./.github/actions/python-ci
        with:
          run_type: integration
          coverage: 'false'

  full:
    name: Full Test Suite (All tests)
    runs-on: ubuntu-latest
    needs: integration
    strategy:
      matrix:
        python-version: ["3.11"]
    timeout-minutes: 35
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv (with cache)
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-py${{ matrix.python-version }}-uv-${{ hashFiles('uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-uv-
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: uv sync --group test --group dev

      - name: Lint + Full
        uses: ./.github/actions/python-ci
        with:
          run_type: full
          coverage: 'true'

      - name: Upload coverage HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov
          if-no-files-found: ignore

      - name: Upload coverage XML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: ignore
