name: Pull Request Validation

on:
  pull_request:
    branches: [main, development]
  workflow_dispatch:

env:
  # Quality gate thresholds based on current test reality
  MIN_SUCCESS_RATE: 95.0
  MIN_COVERAGE: 29.71
  FORCE_COLOR: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --extra test
    
    - name: Run tests with coverage
      run: |
        uv run python scripts/run_tests.py --unit --integration
      continue-on-error: true
      id: tests
    
    - name: Generate coverage report
      run: |
        uv run coverage combine || true
        uv run coverage report --format=markdown > coverage-report.md || true
        uv run coverage html || true
      continue-on-error: true
    
    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report-py${{ matrix.python-version }}
        path: |
          coverage-report.md
          htmlcov/
        retention-days: 7
    
    - name: Parse test results
      id: parse-results
      run: |
        # Parse test results from pytest output
        # This will be enhanced with external script if needed
        if [ "${{ steps.tests.outcome }}" = "success" ]; then
          echo "tests_passed=true" >> $GITHUB_OUTPUT
        else
          echo "tests_passed=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Quality gate check
      run: |
        echo "Quality Gate Status for Python ${{ matrix.python-version }}:"
        
        if [ "${{ steps.parse-results.outputs.tests_passed }}" = "true" ]; then
          echo "✓ Tests passed"
        else
          echo "✗ Tests failed"
          exit 1
        fi
        
        echo ""
        echo "Coverage report uploaded as artifact for manual review"
        echo "Manual coverage regression check required against baseline: ${{ env.MIN_COVERAGE }}%"

  status-check:
    name: Overall Status
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Check overall status
      run: |
        if [ "${{ needs.test.result }}" = "success" ]; then
          echo "✓ All tests passed across Python versions"
        else
          echo "✗ Some tests failed"
          exit 1
        fi